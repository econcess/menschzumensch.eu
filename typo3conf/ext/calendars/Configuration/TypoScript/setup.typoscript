plugin.tx_calendars {
	view {
		templateRootPaths {
			200 = EXT:calendars/Resources/Private/Templates/
			300 = {$themes.resourcesPrivatePath}Extensions/Calendars/Templates/
			400 = {$themes.configuration.extension.calendars.view.templateRootPath}
		}
		partialRootPaths {
			200 = EXT:calendars/Resources/Private/Partials/
			300 = {$themes.resourcesPrivatePath}Extensions/Calendars/Partials/
			400 = {$themes.configuration.extension.calendars.view.partialRootPath}
		}
		layoutRootPaths {
			200 = EXT:calendars/Resources/Private/Layouts/
			300 = {$themes.resourcesPrivatePath}Extensions/Calendars/Layouts/
			400 = {$themes.configuration.extension.calendars.view.layoutRootPath}
		}
	}
	persistence {
		storagePid = {$themes.configuration.container.calendar}
	}
	features {
		# uncomment the following line to enable the new Property Mapper.
		# rewrittenPropertyMapper = 1
		# Skip default arguments from urls
		skipDefaultArguments = 1
	}
	settings {
		debug = 0
		# Page-Id for address single view
		addressListPid = 0

		# @todo move into constants and guidelines-ext
		formatting {
			time {
				format = G:i
			}
			date {
				format = d.m.y
			}
			dateTime {
				format = d.m.y H:i
			}
		}
		# Event registration
		registration {
			pageUid = {$themes.configuration.pages.calendar.registration}
			subject = {$themes.configuration.extension.calendars.registration.subject}
			# Default receiver mail address
			toEmail = {$themes.configuration.extension.calendars.registration.toEmail}
			# Default receiver name
			toName = {$themes.configuration.extension.calendars.registration.toName}
			# Sender mail address
			fromEmail = {$themes.configuration.extension.calendars.registration.fromEmail}
			# Sender Name
			fromName = {$themes.configuration.extension.calendars.registration.fromName}
			# BCC mail address
			bccEmail = {$themes.configuration.extension.calendars.registration.bccEmail}
			# BCC Name
			bccName = {$themes.configuration.extension.calendars.registration.bccName}
			# Enable confirmation email
			enableConfirmationEmail = {$themes.configuration.extension.calendars.registration.enableConfirmationEmail}
			# Enable redirect after registration
			enableRedirectAfterRegistration = {$themes.configuration.extension.calendars.registration.enableRedirectAfterRegistration}
			# Fields for registration email message text
			# When a frontend user/login is in use, this fields will be mapped in logged in frontend user!
			fields {
				# These fields will be validated as required. Event and email are always required!
				required = firstName, lastName, email
				# These fields will be processed while registration
				available = firstName, lastName, address, zip, city, telephone, fax, email, message
			}
			address {
				# Different addresses, selectable in calendar event record
				#anotherOne {
				#	toEmail = typo3@coding.ms
				#	toName = Thomas Deuling
				#}
				#anotherTwo {
				#	toEmail = typo3@coding.ms
				#	toName = Thomas Deuling
				#}
			}
		}
		defaultImage = {$themes.configuration.extension.calendars.defaultImage}
		list {
			pageUid = {$themes.configuration.pages.calendar.list}
			image {
				width = {$themes.configuration.extension.calendars.list.image.width}
				height = {$themes.configuration.extension.calendars.list.image.height}
			}
			# 0 = no crop
			descriptionCrop = 100

			tickets {
				visible = 1
			}

			duration {
				visible = 1
				# DateOnly: 2017-09-13
				# DateStarttime: 2017-09-13 14:00
				section = DateOnly
			}

		}
		detail {
			pageUid = {$themes.configuration.pages.calendar.detail}
			image {
				width = {$themes.configuration.extension.calendars.detail.image.width}
				height = {$themes.configuration.extension.calendars.detail.image.height}
			}
		}
		year {
			calendarWeekVisible = {$themes.configuration.extension.calendars.year.calendarWeekVisible}
			categoryExplanationVisible = {$themes.configuration.extension.calendars.year.categoryExplanationVisible}
		}
		socialmedia {
			twitter {
				title = {$themes.configuration.socialmedia.twitter.title}
				cssClass = {$themes.configuration.socialmedia.twitter.cssClass}
			}
			facebook {
				title = {$themes.configuration.socialmedia.facebook.title}
				cssClass = {$themes.configuration.socialmedia.facebook.cssClass}
			}
			email {
				title = {$themes.configuration.socialmedia.email.title}
				cssClass = {$themes.configuration.socialmedia.email.cssClass}
			}
		}
	}
}
module.tx_calendarspro.settings.formatting < plugin.tx_calendars.settings.formatting

calendars_json_api = PAGE
calendars_json_api {
	config {
		disableAllHeaderCode = 1
		additionalHeaders = Content-type:application/json;charset=utf-8
		debug = 0
		no_cache = 1
		metaCharset = utf-8
	}
	typeNum = 1505818823
	10 < tt_content.list.20.calendars_jsonapi
}

page {
	includeJSFooter {
		logger = EXT:calendars/Resources/Public/JavaScript/Logger.js
		flashMessage = EXT:calendars/Resources/Public/JavaScript/FlashMessage.js
		calendars = EXT:calendars/Resources/Public/JavaScript/Calendars.js
	}
}

<INCLUDE_TYPOSCRIPT: source="DIR:EXT:calendars/Configuration/TypoScript/Library" extensions="typoscript">
